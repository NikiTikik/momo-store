cache:
  paths:
    - frontend/dist/frontend

include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
   - build
   - test

build-frontend:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd frontend
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA

sonarqube-frontend-sast:
  stage: test
  image: 
    name: sonarsource/sonar-scanner-cli:latest # тот самый docker-образ, о котором мы все узнаем в будущем
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd frontend
    - >
      sonar-scanner -Dsonar.qualitygate.wait=true \
        -Dsonar.projectKey=15_TSAREVNV_front \
        -Dsonar.sources=. \
        -Dsonar.host.url=https://sonarqube.praktikum-services.ru \
        -Dsonar.login=e7aab173e21292afffa0217566b173d089b5d418
  allow_failure: true
  dependencies:
    -  build
